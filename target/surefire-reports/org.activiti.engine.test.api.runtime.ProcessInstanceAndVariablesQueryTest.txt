-------------------------------------------------------------------------------
Test set: org.activiti.engine.test.api.runtime.ProcessInstanceAndVariablesQueryTest
-------------------------------------------------------------------------------
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.042 sec <<< FAILURE!
testQuery(org.activiti.engine.test.api.runtime.ProcessInstanceAndVariablesQueryTest)  Time elapsed: 0.041 sec  <<< ERROR!
org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT DISTINCT RES.*, P.KEY_ AS PROCESSDEFINITIONKEY, P.ID_ AS PROCESSDEFINITIONID, P.NAME_ AS PROCESSDEFINITIONNAME, P.VERSION_ AS PROCESSDEFINITIONVERSION, P.DEPLOYMENT_ID_ AS DEPLOYMENTID, 
    VAR.ID_ AS VAR_ID_, VAR.NAME_ AS VAR_NAME_, VAR.TYPE_ AS VAR_TYPE_, VAR.REV_ AS VAR_REV_,
    VAR.PROC_INST_ID_ AS VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ AS VAR_EXECUTION_ID_, VAR.TASK_ID_ AS VAR_TASK_ID_,
    VAR.BYTEARRAY_ID_ AS VAR_BYTEARRAY_ID_, VAR.DOUBLE_ AS VAR_DOUBLE_, 
    VAR.TEXT_ AS VAR_TEXT_, VAR.TEXT2_ AS VAR_TEXT2_, VAR.LONG_ AS VAR_LONG_
    
       
    FROM ACT_RU_EXECUTION RES
    INNER JOIN ACT_RE_PROCDEF P ON RES.PROC_DEF_ID_ = P.ID_
     
      LEFT OUTER JOIN ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ AND VAR.TASK_ID_ IS NULL
     
     
     
        
          INNER JOIN ACT_RU_VARIABLE A0 ON RES.PROC_INST_ID_ = A0.PROC_INST_ID_
          
     
     
     
     
     
     WHERE RES.PARENT_ID_ IS NULL
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
       
      
      
      
        
          
          AND A0.EXECUTION_ID_ = A0.PROC_INST_ID_
        
        
          
          AND A0.NAME_= ?
        
        
        
          AND A0.TYPE_ = ?
        
      	
      	
      	
	      AND A0.LONG_
	      
    =
  
	      ? 
   
    
     ORDER BY  ORDER[*] BY RES.ID_ ASC  
    LIMIT ? OFFSET ? "; expected "=, NOT, EXISTS, INTERSECTS, SELECT, FROM"; SQL statement:
select distinct RES.*, P.KEY_ as ProcessDefinitionKey, P.ID_ as ProcessDefinitionId, P.NAME_ as ProcessDefinitionName, P.VERSION_ as ProcessDefinitionVersion, P.DEPLOYMENT_ID_ as DeploymentId, 
    VAR.ID_ as VAR_ID_, VAR.NAME_ as VAR_NAME_, VAR.TYPE_ as VAR_TYPE_, VAR.REV_ as VAR_REV_,
    VAR.PROC_INST_ID_ as VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ as VAR_EXECUTION_ID_, VAR.TASK_ID_ as VAR_TASK_ID_,
    VAR.BYTEARRAY_ID_ as VAR_BYTEARRAY_ID_, VAR.DOUBLE_ as VAR_DOUBLE_, 
    VAR.TEXT_ as VAR_TEXT_, VAR.TEXT2_ as VAR_TEXT2_, VAR.LONG_ as VAR_LONG_
    
       
    from ACT_RU_EXECUTION RES
    inner join ACT_RE_PROCDEF P on RES.PROC_DEF_ID_ = P.ID_
     
      left outer join ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ and VAR.TASK_ID_ is null
     
     
     
        
          inner join ACT_RU_VARIABLE A0 on RES.PROC_INST_ID_ = A0.PROC_INST_ID_
          
     
     
     
     
     
     WHERE RES.PARENT_ID_ is null
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
       
      
      
      
        
          
          and A0.EXECUTION_ID_ = A0.PROC_INST_ID_
        
        
          
          and A0.NAME_= ?
        
        
        
          and A0.TYPE_ = ?
        
      	
      	
      	
	      and A0.LONG_
	      
    =
  
	      ? 
   
    
     order by  order by RES.ID_ asc  
    LIMIT ? OFFSET ? [42001-176]
### The error may exist in org/activiti/db/mapping/entity/Execution.xml
### The error may involve org.activiti.engine.impl.persistence.entity.ExecutionEntity.selectProcessInstanceWithVariablesByQueryCriteria
### The error occurred while executing a query
### SQL: select distinct RES.*, P.KEY_ as ProcessDefinitionKey, P.ID_ as ProcessDefinitionId, P.NAME_ as ProcessDefinitionName, P.VERSION_ as ProcessDefinitionVersion, P.DEPLOYMENT_ID_ as DeploymentId,      VAR.ID_ as VAR_ID_, VAR.NAME_ as VAR_NAME_, VAR.TYPE_ as VAR_TYPE_, VAR.REV_ as VAR_REV_,     VAR.PROC_INST_ID_ as VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ as VAR_EXECUTION_ID_, VAR.TASK_ID_ as VAR_TASK_ID_,     VAR.BYTEARRAY_ID_ as VAR_BYTEARRAY_ID_, VAR.DOUBLE_ as VAR_DOUBLE_,      VAR.TEXT_ as VAR_TEXT_, VAR.TEXT2_ as VAR_TEXT2_, VAR.LONG_ as VAR_LONG_                  from ACT_RU_EXECUTION RES     inner join ACT_RE_PROCDEF P on RES.PROC_DEF_ID_ = P.ID_             left outer join ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ and VAR.TASK_ID_ is null                                      inner join ACT_RU_VARIABLE A0 on RES.PROC_INST_ID_ = A0.PROC_INST_ID_                                               WHERE RES.PARENT_ID_ is null                                                                                                                                                                                                                                    and A0.EXECUTION_ID_ = A0.PROC_INST_ID_                                        and A0.NAME_= ?                                      and A0.TYPE_ = ?                                         and A0.LONG_             =           ?                order by  order by RES.ID_ asc       LIMIT ? OFFSET ?
### Cause: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT DISTINCT RES.*, P.KEY_ AS PROCESSDEFINITIONKEY, P.ID_ AS PROCESSDEFINITIONID, P.NAME_ AS PROCESSDEFINITIONNAME, P.VERSION_ AS PROCESSDEFINITIONVERSION, P.DEPLOYMENT_ID_ AS DEPLOYMENTID, 
    VAR.ID_ AS VAR_ID_, VAR.NAME_ AS VAR_NAME_, VAR.TYPE_ AS VAR_TYPE_, VAR.REV_ AS VAR_REV_,
    VAR.PROC_INST_ID_ AS VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ AS VAR_EXECUTION_ID_, VAR.TASK_ID_ AS VAR_TASK_ID_,
    VAR.BYTEARRAY_ID_ AS VAR_BYTEARRAY_ID_, VAR.DOUBLE_ AS VAR_DOUBLE_, 
    VAR.TEXT_ AS VAR_TEXT_, VAR.TEXT2_ AS VAR_TEXT2_, VAR.LONG_ AS VAR_LONG_
    
       
    FROM ACT_RU_EXECUTION RES
    INNER JOIN ACT_RE_PROCDEF P ON RES.PROC_DEF_ID_ = P.ID_
     
      LEFT OUTER JOIN ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ AND VAR.TASK_ID_ IS NULL
     
     
     
        
          INNER JOIN ACT_RU_VARIABLE A0 ON RES.PROC_INST_ID_ = A0.PROC_INST_ID_
          
     
     
     
     
     
     WHERE RES.PARENT_ID_ IS NULL
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
       
      
      
      
        
          
          AND A0.EXECUTION_ID_ = A0.PROC_INST_ID_
        
        
          
          AND A0.NAME_= ?
        
        
        
          AND A0.TYPE_ = ?
        
      	
      	
      	
	      AND A0.LONG_
	      
    =
  
	      ? 
   
    
     ORDER BY  ORDER[*] BY RES.ID_ ASC  
    LIMIT ? OFFSET ? "; expected "=, NOT, EXISTS, INTERSECTS, SELECT, FROM"; SQL statement:
select distinct RES.*, P.KEY_ as ProcessDefinitionKey, P.ID_ as ProcessDefinitionId, P.NAME_ as ProcessDefinitionName, P.VERSION_ as ProcessDefinitionVersion, P.DEPLOYMENT_ID_ as DeploymentId, 
    VAR.ID_ as VAR_ID_, VAR.NAME_ as VAR_NAME_, VAR.TYPE_ as VAR_TYPE_, VAR.REV_ as VAR_REV_,
    VAR.PROC_INST_ID_ as VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ as VAR_EXECUTION_ID_, VAR.TASK_ID_ as VAR_TASK_ID_,
    VAR.BYTEARRAY_ID_ as VAR_BYTEARRAY_ID_, VAR.DOUBLE_ as VAR_DOUBLE_, 
    VAR.TEXT_ as VAR_TEXT_, VAR.TEXT2_ as VAR_TEXT2_, VAR.LONG_ as VAR_LONG_
    
       
    from ACT_RU_EXECUTION RES
    inner join ACT_RE_PROCDEF P on RES.PROC_DEF_ID_ = P.ID_
     
      left outer join ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ and VAR.TASK_ID_ is null
     
     
     
        
          inner join ACT_RU_VARIABLE A0 on RES.PROC_INST_ID_ = A0.PROC_INST_ID_
          
     
     
     
     
     
     WHERE RES.PARENT_ID_ is null
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
       
      
      
      
        
          
          and A0.EXECUTION_ID_ = A0.PROC_INST_ID_
        
        
          
          and A0.NAME_= ?
        
        
        
          and A0.TYPE_ = ?
        
      	
      	
      	
	      and A0.LONG_
	      
    =
  
	      ? 
   
    
     order by  order by RES.ID_ asc  
    LIMIT ? OFFSET ? [42001-176]
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:122)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:113)
	at org.activiti.engine.impl.db.DbSqlSession.selectListWithRawParameterWithoutFilter(DbSqlSession.java:448)
	at org.activiti.engine.impl.persistence.entity.ExecutionEntityManager.findProcessInstanceAndVariablesByQueryCriteria(ExecutionEntityManager.java:144)
	at org.activiti.engine.impl.ProcessInstanceQueryImpl.executeList(ProcessInstanceQueryImpl.java:539)
	at org.activiti.engine.impl.AbstractQuery.executeSingleResult(AbstractQuery.java:183)
	at org.activiti.engine.impl.AbstractQuery.execute(AbstractQuery.java:166)
	at org.activiti.engine.impl.interceptor.CommandInvoker.execute(CommandInvoker.java:24)
	at org.activiti.engine.impl.interceptor.CommandContextInterceptor.execute(CommandContextInterceptor.java:57)
	at org.activiti.engine.impl.interceptor.LogInterceptor.execute(LogInterceptor.java:37)
	at org.activiti.engine.impl.cfg.CommandExecutorImpl.execute(CommandExecutorImpl.java:40)
	at org.activiti.engine.impl.cfg.CommandExecutorImpl.execute(CommandExecutorImpl.java:35)
	at org.activiti.engine.impl.AbstractQuery.singleResult(AbstractQuery.java:129)
	at org.activiti.engine.test.api.runtime.ProcessInstanceAndVariablesQueryTest.testQuery(ProcessInstanceAndVariablesQueryTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.activiti.engine.impl.test.PvmTestCase.runTest(PvmTestCase.java:65)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at org.activiti.engine.impl.test.AbstractActivitiTestCase.runBare(AbstractActivitiTestCase.java:100)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:35)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:146)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:145)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
Caused by: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT DISTINCT RES.*, P.KEY_ AS PROCESSDEFINITIONKEY, P.ID_ AS PROCESSDEFINITIONID, P.NAME_ AS PROCESSDEFINITIONNAME, P.VERSION_ AS PROCESSDEFINITIONVERSION, P.DEPLOYMENT_ID_ AS DEPLOYMENTID, 
    VAR.ID_ AS VAR_ID_, VAR.NAME_ AS VAR_NAME_, VAR.TYPE_ AS VAR_TYPE_, VAR.REV_ AS VAR_REV_,
    VAR.PROC_INST_ID_ AS VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ AS VAR_EXECUTION_ID_, VAR.TASK_ID_ AS VAR_TASK_ID_,
    VAR.BYTEARRAY_ID_ AS VAR_BYTEARRAY_ID_, VAR.DOUBLE_ AS VAR_DOUBLE_, 
    VAR.TEXT_ AS VAR_TEXT_, VAR.TEXT2_ AS VAR_TEXT2_, VAR.LONG_ AS VAR_LONG_
    
       
    FROM ACT_RU_EXECUTION RES
    INNER JOIN ACT_RE_PROCDEF P ON RES.PROC_DEF_ID_ = P.ID_
     
      LEFT OUTER JOIN ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ AND VAR.TASK_ID_ IS NULL
     
     
     
        
          INNER JOIN ACT_RU_VARIABLE A0 ON RES.PROC_INST_ID_ = A0.PROC_INST_ID_
          
     
     
     
     
     
     WHERE RES.PARENT_ID_ IS NULL
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
       
      
      
      
        
          
          AND A0.EXECUTION_ID_ = A0.PROC_INST_ID_
        
        
          
          AND A0.NAME_= ?
        
        
        
          AND A0.TYPE_ = ?
        
      	
      	
      	
	      AND A0.LONG_
	      
    =
  
	      ? 
   
    
     ORDER BY  ORDER[*] BY RES.ID_ ASC  
    LIMIT ? OFFSET ? "; expected "=, NOT, EXISTS, INTERSECTS, SELECT, FROM"; SQL statement:
select distinct RES.*, P.KEY_ as ProcessDefinitionKey, P.ID_ as ProcessDefinitionId, P.NAME_ as ProcessDefinitionName, P.VERSION_ as ProcessDefinitionVersion, P.DEPLOYMENT_ID_ as DeploymentId, 
    VAR.ID_ as VAR_ID_, VAR.NAME_ as VAR_NAME_, VAR.TYPE_ as VAR_TYPE_, VAR.REV_ as VAR_REV_,
    VAR.PROC_INST_ID_ as VAR_PROC_INST_ID_, VAR.EXECUTION_ID_ as VAR_EXECUTION_ID_, VAR.TASK_ID_ as VAR_TASK_ID_,
    VAR.BYTEARRAY_ID_ as VAR_BYTEARRAY_ID_, VAR.DOUBLE_ as VAR_DOUBLE_, 
    VAR.TEXT_ as VAR_TEXT_, VAR.TEXT2_ as VAR_TEXT2_, VAR.LONG_ as VAR_LONG_
    
       
    from ACT_RU_EXECUTION RES
    inner join ACT_RE_PROCDEF P on RES.PROC_DEF_ID_ = P.ID_
     
      left outer join ACT_RU_VARIABLE VAR ON RES.PROC_INST_ID_ = VAR.EXECUTION_ID_ and VAR.TASK_ID_ is null
     
     
     
        
          inner join ACT_RU_VARIABLE A0 on RES.PROC_INST_ID_ = A0.PROC_INST_ID_
          
     
     
     
     
     
     WHERE RES.PARENT_ID_ is null
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
       
      
      
      
        
          
          and A0.EXECUTION_ID_ = A0.PROC_INST_ID_
        
        
          
          and A0.NAME_= ?
        
        
        
          and A0.TYPE_ = ?
        
      	
      	
      	
	      and A0.LONG_
	      
    =
  
	      ? 
   
    
     order by  order by RES.ID_ asc  
    LIMIT ? OFFSET ? [42001-176]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:344)
	at org.h2.message.DbException.getSyntaxError(DbException.java:204)
	at org.h2.command.Parser.getSyntaxError(Parser.java:524)
	at org.h2.command.Parser.readTerm(Parser.java:2688)
	at org.h2.command.Parser.readFactor(Parser.java:2244)
	at org.h2.command.Parser.readSum(Parser.java:2231)
	at org.h2.command.Parser.readConcat(Parser.java:2201)
	at org.h2.command.Parser.readCondition(Parser.java:2051)
	at org.h2.command.Parser.readAnd(Parser.java:2023)
	at org.h2.command.Parser.readExpression(Parser.java:2015)
	at org.h2.command.Parser.parseEndOfQuery(Parser.java:1726)
	at org.h2.command.Parser.parseSelectUnionExtension(Parser.java:1706)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:1675)
	at org.h2.command.Parser.parseSelect(Parser.java:1662)
	at org.h2.command.Parser.parsePrepared(Parser.java:434)
	at org.h2.command.Parser.parse(Parser.java:306)
	at org.h2.command.Parser.parse(Parser.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:243)
	at org.h2.engine.Session.prepareLocal(Session.java:442)
	at org.h2.engine.Session.prepareCommand(Session.java:384)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1188)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:276)
	at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.datasource.pooled.PooledConnection.invoke(PooledConnection.java:245)
	at com.sun.proxy.$Proxy12.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy12.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:79)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:58)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:76)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:61)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:303)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:154)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:102)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:82)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:120)
	... 40 more

